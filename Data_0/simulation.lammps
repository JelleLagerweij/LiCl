####################################################
# EXAMPLE for using the OCTP plugin
# Transport properties of KOH-water
#  at 298 K and 1 atm. 
#################### SETTING UP ####################
units real
dimension 3
newton on
boundary p p p
atom_style full

#################### VARIABLES ####################
variable Temp       equal   288.15          # Temperature in K
variable Pres       equal   1.0             # Pressure in atm.

variable RandomSeed equal   125             # The random seed for velocity
variable tstep      equal   2.0             # 1fs 
variable Ninptpre   equal   10000           # Pre-initialize the NPT ensemble (very small timesteps)
variable Ninpt      equal   50000           # Initialize the NPT ensemble
variable Npnpt      equal   1000000         # Production in the NPT ensemble (volume)
variable Ninvtpre   equal   10000           # Pre-initialize the NVT ensemble (very small timesteps)
variable Ninvt      equal   100000          # Initialize the NVT ensemble
variable Nrun       equal   25000000        # production in the NVT ensemble
variable Nf         equal   1000            # Nfreq (fix ave/time and thermo)
variable Ne         equal   20              # Nevery (fix ave/time)
variable Nr         equal   ${Nf}/${Ne}     # Nrepeat (fix ave/time)
variable NBR        equal   ${Npnpt}/5      # Block averaging for density (NPT)
variable Nd         equal   ${Nrun}/10      # Frequency of outputting positions of atoms in the NVT ensemble

variable nb         equal   10              # Number of blocks (fix ordern)
variable nbe        equal   20              # Number of block elements (fix ordern)
variable Nvisc      equal   5               # Nevery for viscosity (fix ordern: sample data at (Nvisc*2))
variable Ncond      equal   5               # Nevery for Tconductivity (fix ordern: sample data at (Ncond*2))
variable Ndiff      equal   100             # Nevery for diffusivity (fix ordern: sample data at (Ndiff))
variable Nwrit      equal   100             # Nwrite for transport properties (fix ordern: write every (Nwrit))
variable NwriteF    equal   500             # Nwrite for outputting positions of atoms in the NVT ensemble

variable Nrdfe      equal   100             # Nevery for RDF (fix ave/time)
variable Nrdfw      equal   1000            # Nwrite for RDF (compute rdf/ext: write every (Nrdfw*Nrdfe))
variable binnum     equal   2000            # Number of bins for RDF

variable Nthermo    equal   1000            # Number of timesteps between thermo output production

#################### ATOM DEFINITION and FORCEFIELD ####################

read_data ./data.lmp                        # read the positions
include ./forcefield.data                  # read the force field

#################### INITIALIZATION ####################
# groups for the central atoms of water (O) and methanol (O)
group wat   type 1      # The Oxygen of WATER molecules
group K     type 3
group Oh    type 4

# combined group creation by union of existing groups
group K_Oh union K Oh  # does this crash octp?

# neigbor lists
neighbor 2.0 bin
neigh_modify every 1 delay 0 check yes

# velocity-Verlet integrator
run_style verlet

# minimizing the system using the conjugate gradient method
min_style cg
min_modify dmax 0.05 
minimize 1.0e-6 1.0e-6 1000 10000
reset_timestep 0

# initializing velocities
velocity all create ${Temp} ${RandomSeed}  

# rate of writing thermal properties to the log file
thermo ${Nthermo}

#################### 1) Initialize the NPT ensemble ####################
# applying the shake algorithm for rigid molecules and the NPT solver
fix constrain all shake 1.0e-6 1000 0 b 1 2 a 1
fix integrate all npt temp ${Temp} ${Temp} 10.0 iso ${Pres} ${Pres} 100.0

# balance 0.9 shift xyz 20 1.1 out tmp.balance

# Initializing the whole system with very small timesteps in the NPT ensemble
timestep 0.001
run ${Ninptpre} 
timestep 0.01
run ${Ninptpre} 
timestep 0.1
run ${Ninptpre} 
timestep 0.2
run ${Ninptpre} 
timestep 0.5
run ${Ninptpre}
timestep 1.0
run ${Ninptpre} 
reset_timestep 0

#################### 2) Equilibrating the NPT ensemble ####################
unfix integrate
fix integrate all npt temp ${Temp} ${Temp} 100.0 iso ${Pres} ${Pres} 1000.0

# balance         0.9 shift xyz 20 1.1 out tmp.balance

timestep ${tstep}

variable TotEn equal etotal
variable PotEn equal pe
variable Volume equal vol
variable Dens equal density
compute T all temp
compute P all pressure T

fix AveAll all ave/time ${Ne} ${Nr} ${Nf} v_TotEn v_PotEn c_T c_P file npt_equi.dat
run ${Ninpt}

unfix AveAll
reset_timestep 0

#################### 3) Production in NPT ######################
# Getting the average volume of the system
fix VoluAve all ave/time 1 ${Npnpt} ${Npnpt} v_Volume file volume.dat
fix AveAll all ave/time ${Ne} ${Nr} ${Nf} v_TotEn v_PotEn c_T c_P v_Dens file npt_prod.dat

# fix BALANCE all balance ${balance_f} 0.8 shift xyz 20 1.2

run ${Npnpt}
unfix AveAll
# unfix BALANCE

#################### 4) Initializing the NVT ensemble ####################
# scaling the size of the system to the average volume
variable sidesize equal (f_VoluAve^(1.0/3.0))    # get the volume
variable xlow equal xlo
variable ylow equal ylo
variable zlow equal zlo
variable xhig equal (xlo+${sidesize})
variable yhig equal (ylo+${sidesize})
variable zhig equal (zlo+${sidesize})
change_box all x final ${xlow} ${xhig} y final ${ylow} ${yhig} z final ${zlow} ${zhig}

unfix VoluAve
unfix integrate
reset_timestep 0

# changing the ensemble to strickt NVT
fix integrate all nvt temp ${Temp} ${Temp} 10.0
# balance 0.9 shift xyz 20 1.1 out tmp.balance

# Initializing the whole system with very small timesteps in the NVT ensemble
timestep 0.001
run ${Ninvtpre} 
timestep 0.01
run ${Ninvtpre} 
timestep 0.1
run ${Ninvtpre} 
timestep 0.2
run ${Ninvtpre} 
timestep 0.5
run ${Ninvtpre}
timestep 1.0
run ${Ninptpre} 
reset_timestep 0

#################### 5) Equilibrate the NVT ensemble ####################
unfix integrate
fix integrate all nvt temp ${Temp} ${Temp} 100.0

# balance 0.9 shift xyz 20 1.1 out tmp.balance

timestep ${tstep}
fix AveAll all ave/time ${Ne} ${Nr} ${Nf} v_TotEn v_PotEn c_T c_P file nvt_equi.dat

run ${Ninvt}

unfix AveAll
reset_timestep 0

#################### 6) Production in NVT #####################
# output files using xyz format
# dump dump1 K_Oh custom ${Nwrite} movie.lammpstrj type xu yu zu
# dump_modify dump1 element O H K Oh Hh sort id

# Output files using the DCD format
dump dump3 K_Oh dcd ${NwriteF} movie.dcd
dump_modify dump3 unwrap yes sort id

# computing average total energy, pontential energy, temperature, and pressure over time
fix AveAll all ave/time ${Ne} ${Nr} ${Nf} v_TotEn v_PotEn c_T c_P file nvt_prod.dat
# fix BALANCE all balance ${balance_f} 0.9 shift xyz 20 1.1

# computing self-diffusion and Onsager coefficients using the OCTP plugin
compute positions all position
fix f3 all ordern diffusivity ${Nwrit} ${Nwrit} c_positions nb ${nb} nbe ${nbe} file diffself.dat diffonsag.dat title "Water at 298 K and 1 atm"
# computing shear and bulk viscosities  using the OCTP plugin
# fix f1 all ordern viscosity ${Nvisc} ${Nwrit} c_P nb ${nb} nbe ${nbe} file viscosity.dat title "Water at 298 K and 1 atm"

# # computing thermal conductivity using the OCTP plugin
# compute KE all ke/atom
# compute PE all pe/atom
# compute ST all stress/atom NULL virial
# compute heatflux all heat/flux KE PE ST
# fix f2 all ordern thermalconductivity ${Ncond} ${Nwrit} c_heatflux nb ${nb} nbe ${nbe} file tconductivity.dat title "water at 298 K and 1 atm"


# # computing the RDF for all group pairs
# compute rdfs all rdf/ext Nbin ${binnum} Nwrite ${Nrdfw} file rdf.dat
# fix f4 all ave/time 1 1 ${Nrdfe} c_rdfs


# rate of writing thermal properties to the log file
thermo ${Nthermo}
# Thermo style for outputing system properties to the log file
thermo_style custom step temp press pe ke etotal
thermo_modify flush yes

#thermo 1
run ${Nrun}

quit

